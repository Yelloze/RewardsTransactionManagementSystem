{"ast":null,"code":"import _classCallCheck from \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/src/component/CustomerComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport DataService from '../service/DataService';\nvar INSTRUCTOR = 'rewardTest';\n\nvar CustomerComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomerComponent, _Component);\n\n  function CustomerComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomerComponent).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      product: '',\n      transAmount: '',\n      rewards: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CustomerComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.state.id); // eslint-disable-next-line\n\n      if (this.state.id == -1) {\n        return;\n      }\n\n      DataService.retrieveCustomer(INSTRUCTOR, this.state.id).then(function (response) {\n        return _this2.setState({\n          product: response.data.transAmount,\n          transAmount: response.data.reward,\n          reward: response.data.transAmount\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.transAmount) {\n        errors.transAmount = 'Enter a transAmount';\n      } else if (values.transAmount.length < 0) {\n        errors.transAmount = 'transAmount should not be Zero';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var product = INSTRUCTOR;\n      var customer = {\n        id: this.state.id,\n        product: values.product,\n        transAmount: values.transAmount,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        DataService.createPurchase(product, customer).then(function () {\n          return _this3.props.history.push('/customers');\n        });\n      } else {\n        DataService.updateCustomer(product, this.state.id, customer).then(function () {\n          return _this3.props.history.push('/customers');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          product = _this$state.product,\n          id = _this$state.id,\n          transAmount = _this$state.transAmount,\n          rewards = _this$state.rewards;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Cusomers\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          id: id,\n          product: product,\n          transAmount: transAmount,\n          rewards: rewards\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"product\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Id\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"id\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Product\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Transaction Amount\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Reward\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"reward\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Save\"));\n      })));\n    }\n  }]);\n\n  return CustomerComponent;\n}(Component);\n\nexport default CustomerComponent;","map":{"version":3,"sources":["/Users/Sailu/Downloads/spring-boot-react-fullstack-examples-master/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/src/component/CustomerComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","DataService","INSTRUCTOR","CustomerComponent","props","state","id","match","params","product","transAmount","rewards","onSubmit","bind","validate","console","log","retrieveCustomer","then","response","setState","data","reward","values","errors","length","customer","targetDate","createPurchase","history","push","updateCustomer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport DataService from '../service/DataService';\n\nconst INSTRUCTOR = 'rewardTest'\n\n\nclass CustomerComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            product: '',\n            transAmount : '',\n            rewards : ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        DataService.retrieveCustomer(INSTRUCTOR, this.state.id)\n            .then(response => this.setState({\n                product: response.data.transAmount,\n                transAmount: response.data.reward,\n                reward:response.data.transAmount\n\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.transAmount) {\n            errors.transAmount = 'Enter a transAmount'\n        } else if (values.transAmount.length < 0) {\n            errors.transAmount = 'transAmount should not be Zero'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let product = INSTRUCTOR\n\n\n        let customer = {\n            id: this.state.id,\n            product: values.product,\n            transAmount:values.transAmount,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            DataService.createPurchase(product, customer)\n                .then(() => this.props.history.push('/customers'))\n        } else {\n            DataService.updateCustomer(product, this.state.id, customer)\n                .then(() => this.props.history.push('/customers'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { product, id,transAmount ,rewards} = this.state\n\n        return (\n            <div>\n                <h3>Cusomers</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, product,transAmount,rewards}}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"product\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Product</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"product\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Transaction Amount</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"product\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Reward</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"reward\" />\n                                    </fieldset>\n\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CustomerComponent"]},"metadata":{},"sourceType":"module"}